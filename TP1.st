Object subclass: #AlgoTrip	instanceVariableNames: 'ciudades hoteles viajes paquetes'	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!AlgoTrip methodsFor: 'access' stamp: 'JosueGiovanniV 5/17/2018 12:45'!obtenerCostoDelViaje: nombre^ ( self buscarEnColeccionA:nombre en:viajes ) getCosto .! !!AlgoTrip methodsFor: 'access' stamp: 'JosueGiovanniV 5/17/2018 12:47'!obtenerDuracionEnDiasDelViaje: nombre^ ( self buscarEnColeccionA:nombre en:viajes ) getDuracion  .! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/18/2018 21:56'!buscarEnColeccionA: nuevoNombre en: coleccioncoleccion keysDo: [ :i | (i = nuevoNombre ) ifTrue: [ ^ (coleccion at: i) ] ].	NoSeEnconTroError signal .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 15:16'!agregarVueloEnPaquete: nombrePaquete de: deCiudad a: aCiudad enFecha: fecha(self buscarEnColeccionA: nombrePaquete en: paquetes  ) agregarVueloDe: (self buscarEnColeccionA: deCiudad  en: ciudades  )  a: (self buscarEnColeccionA: aCiudad  en: ciudades  )  fecha: fecha .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 10:54'!agregarHotel: nombreHotel en: enCiudad conPrecioPorNoche: precio|nuevoHotel|nuevoHotel := Hotel new.nuevoHotel setCiudad: enCiudad .nuevoHotel setPrecioPorNoche: precio .hoteles at: nombreHotel put: nuevoHotel  .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/18/2018 21:57'!crearViaje: nombre| nuevoViaje |nuevoViaje := Viaje new.viajes at: nombre put: nuevoViaje .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 15:29'!agregarPaquete:nombrePaquete| nuevoPaquete |nuevoPaquete := Paquete new.paquetes at:nombrePaquete put: nuevoPaquete .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 14:43'!solicitarComidaEspecialAbordoPara: nombre(self buscarEnColeccionA: nombre en: viajes ) agregarComida .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 15:20'!agregarPaquete: nombrePaquete enViaje: nombreViaje(self buscarEnColeccionA: nombreViaje  en: viajes ) agregarPaquete:(self buscarEnColeccionA: nombrePaquete en:paquetes  )! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/17/2018 13:05'!agregarVueloEnViaje: nombre de: deCiudad a: aCiudad enFecha: fecha(self buscarEnColeccionA: nombre en: viajes ) agregarVueloDe: (self buscarEnColeccionA: deCiudad  en: ciudades  )  a: (self buscarEnColeccionA: aCiudad  en: ciudades  )  fecha: fecha .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 12:30'!agregarEstadiaEnViaje: nombre enHotel: nombreHotel desde: fechaInicio hasta: fechaFinal(self buscarEnColeccionA: nombre en: viajes ) agregarEstadiaHotel: (self buscarEnColeccionA: nombreHotel  en: hoteles  ) fechaInicio: fechaInicio   fechaFinal: fechaFinal  .	! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 14:43'!agregarAsistenciaAlViajeroAlViaje: nombre(self buscarEnColeccionA: nombre en: viajes ) agregarAsistencia .		! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 15:30'!agregarEstadiaEnPaquete: nombre enHotel: nombreHotel  desde: desdeFecha hasta: hastaFecha(self buscarEnColeccionA: nombre en: paquetes  ) agregarEstadiaHotel: (self buscarEnColeccionA: nombreHotel  en: hoteles  ) fechaInicio: desdeFecha   fechaFinal: hastaFecha  .! !!AlgoTrip methodsFor: 'setting' stamp: 'JosueGiovanniV 5/18/2018 22:01'!agregarCiudad: nombreCiudad dePais: nombrePais conCodigo: codigo latitud: latitud longitud: longitud| nuevaCiudad |nuevaCiudad := Ciudad new.nuevaCiudad setNombreCiudad:  nombreCiudad .nuevaCiudad setPais:  nombrePais .nuevaCiudad setLatitud:  latitud  .nuevaCiudad setLongitud:  longitud  .ciudades at:codigo put: nuevaCiudad .! !!AlgoTrip methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/18/2018 21:55'!initializeciudades := Dictionary  new.hoteles  := Dictionary  new.viajes := Dictionary new.paquetes := Dictionary  new.! !Object subclass: #Ciudad	instanceVariableNames: 'nombre pais latitud longitud'	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!Ciudad methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 12:52'!setPais: nuevopais := nuevo.! !!Ciudad methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 12:52'!setNombreCiudad: nuevonombre := nuevo.! !!Ciudad methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 13:27'!getLatitud^latitud ! !!Ciudad methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 12:53'!setLongitud: nuevolongitud  := nuevo.! !!Ciudad methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 13:27'!getLongitud^longitud .! !!Ciudad methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/18/2018 23:23'!getPais^pais .! !!Ciudad methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 12:53'!setLatitud: nuevolatitud  := nuevo.! !!Ciudad methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/18/2018 22:49'!distanciaA: nueva| latitud1 latitud2 longitud1 longitud2 radioTerrestre distancia |latitud1 := (self getLatitud ) degreesToRadians .longitud1 := (self getLongitud  ) degreesToRadians .latitud2 := (nueva getLatitud ) degreesToRadians .longitud2 := (nueva getLongitud  ) degreesToRadians .radioTerrestre := 6371.00.			distancia := ( 2 * radioTerrestre * 	(((((((latitud2 - latitud1) / 2) sin) squared)	+ ((latitud1 cos) * (latitud2 cos) * 	((((longitud2 - longitud1) / 2) sin) squared))) sqrt) arcSin) ).	^distancia.! !Object subclass: #ConAsistencia	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!ConAsistencia methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 14:54'!getCostoPorEstadia^30.! !!ConAsistencia methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 14:53'!getCostoPorVuelo^1.1.! !Object subclass: #ConComida	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!ConComida methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 15:06'!getCosto^100.! !Object subclass: #ConPaquete	instanceVariableNames: 'elPaquetin'	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!ConPaquete methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:36'!getDuracion^(elPaquetin getDuracion ).! !!ConPaquete methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:36'!getCosto^(elPaquetin getCosto).! !!ConPaquete methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 18:35'!setPaquete: nuevo"Pongo un paquete cargado con todos los datos en paquetin"elPaquetin := nuevo.! !Object subclass: #Hotel	instanceVariableNames: 'enciudad precio'	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!Hotel methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 13:02'!getPrecio^precio .! !!Hotel methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 14:03'!getCiudad^enciudad .! !!Hotel methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 14:27'!setCiudad:nuevoenciudad := nuevo .! !!Hotel methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 14:27'!setPrecioPorNoche:nuevoprecio := nuevo .! !Hotel subclass: #Estadia	instanceVariableNames: 'fechainicio fechafinal asistencia'	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!Estadia methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 14:34'!getFechaFinal^fechafinal! !!Estadia methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 12:38'!setFechaInico: nuevafechafechainicio := nuevafecha .! !!Estadia methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 12:38'!setFechaFinal: nuevafechafechafinal := nuevafecha . ! !!Estadia methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 14:55'!setAsistenciaValor: nuevoasistencia := nuevo .! !!Estadia methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 14:36'!getFechaInico^fechainicio! !!Estadia methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 14:59'!getCosto^ ( ( ( fechafinal  )asDate - (fechainicio )asDate  )days * ( precio + asistencia ) ).! !Error subclass: #NoSeEnconTroError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!Object subclass: #Oferta	instanceVariableNames: 'costo duracion vuelos fechas estadias asistencia comida paquete'	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!Oferta methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:33'!costoVuelos| total |total := 0.vuelos do:[ :i | total := total + i getCosto ].	^total .! !!Oferta methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:31'!agregarAsistenciaasistencia := ConAsistencia new.estadias do: [ :i |  i setAsistenciaValor: (asistencia getCostoPorEstadia ) ].! !!Oferta methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:32'!agregarEstadiaHotel: nuevoHotel fechaInicio: fechaInicio   fechaFinal: fechaFinal | nuevaEstadia |nuevaEstadia := Estadia new.nuevaEstadia setCiudad: (nuevoHotel getCiudad ).nuevaEstadia setPrecioPorNoche: (nuevoHotel getPrecio ).nuevaEstadia setFechaInico: fechaInicio .nuevaEstadia setFechaFinal: fechaFinal .nuevaEstadia setAsistenciaValor: (asistencia getCostoPorEstadia ).estadias add: nuevaEstadia .! !!Oferta methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 15:07'!agregarComidacomida := ConComida  new.vuelos do: [ :i |  i setComida: (comida getCosto ) ].! !!Oferta methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:32'!cargarFechasvuelos do: [ :i | fechas add: (i getFecha) ].estadias do: [ :i | fechas add: (i getFechaInico ).  fechas add: (i getFechaFinal).].	! !!Oferta methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 15:05'!agregarVueloDe: origenNew a: destinoNew fecha: fechaNew| nuevoVuelo |nuevoVuelo :=Vuelo new.nuevoVuelo setOrigen: origenNew .nuevoVuelo setDestino: destinoNew .nuevoVuelo setFecha: fechaNew  .nuevoVuelo setComida: (comida getCosto).vuelos add: nuevoVuelo .! !!Oferta methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:32'!costoEstadias| total |total := 0.estadias do:[ :i | total := total + i getCosto ].	^total .! !!Oferta methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 18:25'!initializecosto := 0.duracion := 0.vuelos := OrderedCollection new.estadias := OrderedCollection new.fechas := SortedCollection new.asistencia := SinAsistencia new.comida := SinComida new.paquete := SinPaquete new.! !Oferta subclass: #Paquete	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!Paquete methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:30'!getDuracionself cargarFechas .(fechas size = 0) ifFalse: [ duracion :=( ( fechas at:(fechas size) )asDate - (fechas at:1 )asDate )days + 1.].													^duracion.! !!Paquete methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 16:14'!getCostocosto := (self costoVuelos )*(asistencia getCostoPorVuelo)*0.9.costo := costo + ( (self costoEstadias) * 0.8 ) .^costo.! !Object subclass: #SinAsistencia	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!SinAsistencia methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 14:54'!getCostoPorEstadia^0.! !!SinAsistencia methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 14:53'!getCostoPorVuelo^1.! !Object subclass: #SinComida	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!SinComida methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 14:45'!getCosto^0.! !Object subclass: #SinPaquete	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!SinPaquete methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 16:22'!getDuracion^ 0 .! !!SinPaquete methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 15:51'!getCosto^0.! !Oferta subclass: #Viaje	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!Viaje methodsFor: 'setting' stamp: 'JosueGiovanniV 5/20/2018 16:10'!agregarPaquete: nuevopaquete := ConPaquete new.paquete setPaquete:nuevo.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:29'!getDuracionself cargarFechas .(fechas size = 0) ifFalse: [ duracion :=( ( fechas at:(fechas size) )asDate - (fechas at:1 )asDate )days + 1.].( duracion  < (paquete getDuracion ) ) ifTrue: [ ^(paquete getDuracion ) ].													^duracion .! !!Viaje methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:22'!getCostocosto := (self costoVuelos )*(asistencia getCostoPorVuelo).costo := costo + (self costoEstadias).costo := costo + (paquete getCosto ).^costo.! !Object subclass: #Vuelo	instanceVariableNames: 'origen destino fecha comida'	classVariableNames: ''	poolDictionaries: ''	category: 'algoTP1'!!Vuelo methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 13:34'!setDestino: nuevodestino  := nuevo.! !!Vuelo methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 13:34'!setFecha: nuevofecha  := nuevo.! !!Vuelo methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/20/2018 15:05'!setComida:nuevocomida := nuevo.! !!Vuelo methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/18/2018 23:43'!getFecha^fecha! !!Vuelo methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/17/2018 13:34'!setOrigen: nuevoorigen := nuevo.! !!Vuelo methodsFor: 'initialization' stamp: 'JosueGiovanniV 5/18/2018 22:46'!initializeorigen := Ciudad new.destino := Ciudad new.! !!Vuelo methodsFor: 'as yet unclassified' stamp: 'JosueGiovanniV 5/20/2018 18:11'!getCosto|costo|costo := ( origen distanciaA: destino ).(origen getPais  = destino getPais ) ifFalse: [ ^ (costo*1.5*1.05) ].^(costo + comida) .! !